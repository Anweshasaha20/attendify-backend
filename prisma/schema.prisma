generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  fullName  String
  email     String   @unique
  username  String   @unique
  password  String  
  refreshToken String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // enrollments   Class[]         @relation("Enrollments")
  // attendanceLog AttendanceLog[]
  // adminOf       Class[]         @relation("AdminClasses")
}

// model Class {
//   id          String    @id @default(uuid())
//   name        String
//   description String?
//   admin       User      @relation("AdminClasses", fields: [adminId], references: [id], onDelete: Cascade)
//   adminId     String
//   sessions    Session[]
//   students    User[]    @relation("Enrollments")

//   @@index([adminId])
// }

// model Session {
//   id            String          @id @default(uuid())
//   name          String
//   class         Class           @relation(fields: [classId], references: [id], onDelete: Cascade)
//   classId       String
//   startTime     DateTime
//   endTime       DateTime
//   createdAt     DateTime        @default(now())
//   updatedAt     DateTime        @updatedAt
//   attendanceLog AttendanceLog[]

//   @@index([classId])
// }

// model AttendanceLog {
//   id         String   @id @default(uuid())
//   attendee   User     @relation(fields: [attendeeId], references: [id], onDelete: Cascade)
//   attendeeId String
//   session    Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
//   sessionId  String
//   timestamp  DateTime @default(now())
// }
